{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Sweet.js","components/SweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","error","setError","newAccount","setNewAccount","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Sweet","sweetObj","isOwner","editing","setEditing","text","newSweet","setNewSweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","autoFocus","src","class","faTrash","faPencilAlt","SweetFactory","userObj","sweet","setSweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","sweets","setSweets","useEffect","onSnapshot","snapshot","sweetArray","docs","map","marginTop","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","updateProfile","signOut","push","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","Profile","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a666ed6d.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n    appId: process.env.REACT_APP_APP_ID,\r\n  };\r\n  \r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\n\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService =firebase.storage();","import React, {useState} from \"react\";\r\n\r\nimport { authService } from \"fbase\";\r\n\r\nconst AuthForm =() => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [error, setError] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    \r\n    const onChange = (event) => {\r\n        const {target: {name, value}} =event;\r\n        if(name === \"email\" ){\r\n            setEmail(value)\r\n        } else if (name===\"password\") {\r\n            setPassword(value);\r\n        }\r\n    }\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            let data;\r\n            if(newAccount) {\r\n                data = await authService.createUserWithEmailAndPassword(email, password)\r\n            } else {\r\n                data = await authService.signInWithEmailAndPassword(email, password)\r\n            }\r\n            console.log(data);\r\n        } catch(error) {\r\n            setError(error.message);\r\n        }\r\n    };\r\n    const toggleAccount = () => setNewAccount(prev => !prev);\r\n    return (\r\n    <>\r\n        <form onSubmit={onSubmit} className=\"container\">\r\n            <input name=\"email\" type=\"email\" placeholder=\"Email\" required value={email} onChange={onChange} className=\"authInput\" />\r\n            <input name=\"password\" type=\"password\" placeholder=\"Password\" required value={password} onChange={onChange} className=\"authInput\"/>\r\n            <input type=\"submit\" className=\"authInput authSubmit\" value={newAccount ? \"Create Account\" : \"Sign In\"} \r\n        /> \r\n        {error && <span className=\"authError\">{error}</span>}\r\n        </form>\r\n            <span onClick={toggleAccount} className=\"authSwitch\">{newAccount ? \"Log In\" : \"Create Account\"}</span>\r\n</>\r\n        )\r\n    }  ; \r\nexport default AuthForm;","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTwitter,\r\n  faGoogle,\r\n  faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\nimport { authService, firebaseInstance } from \"fbase\";\r\nimport AuthForm from \"components/AuthForm\";\r\n\r\nconst Auth = () => {\r\nconst onSocialClick = async (event) => {\r\n    const {\r\n      target: { name },\r\n    } = event;\r\n    let provider;\r\n    if (name === \"google\") {\r\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n    } else if (name === \"github\") {\r\n      provider = new firebaseInstance.auth.GithubAuthProvider();\r\n    }\r\n    await authService.signInWithPopup(provider);\r\n\r\n  };\r\n\r\nreturn (\r\n    <div className=\"authContainer\">\r\n      <FontAwesomeIcon\r\n        icon={faTwitter}\r\n        color={\"#04AAFF\"}\r\n        size=\"3x\"\r\n        style={{ marginBottom: 30 }}\r\n      />\r\n        <AuthForm />\r\n        <div className=\"authBtns\">\r\n            <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">Continue with Google <FontAwesomeIcon icon={faGoogle} /></button>\r\n            <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n          Continue with Github <FontAwesomeIcon icon={faGithub} />        \r\n          </button>\r\n        </div>\r\n    </div>\r\n    );\r\n};\r\nexport default Auth;","import React, { useState } from \"react\";\r\nimport { dbService, storageService } from \"fbase\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Sweet = ({ sweetObj, isOwner }) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const [newSweet, setNewSweet] = useState(sweetObj.text);\r\n  const onDeleteClick = async () => {\r\n    const ok = window.confirm(\"Are you sure you want to delete this sweet?\");\r\n    if (ok) {\r\n      await dbService.doc(`sweets/${sweetObj.id}`).delete();\r\n      await storageService.refFromURL(sweetObj.attachmentUrl).delete();\r\n    }\r\n  };\r\n  const toggleEditing = () => setEditing((prev) => !prev);\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    await dbService.doc(`sweets/${sweetObj.id}`).update({\r\n      text: newSweet,\r\n    });\r\n    setEditing(false);\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewSweet(value);\r\n  };\r\n  return (\r\n    <div className=\"nweet\">\r\n      {editing ? (\r\n        <>\r\n          <form onSubmit={onSubmit} className=\"container nweetEdit\" className=\"formBtn\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Edit your sweet\"\r\n              value={newSweet}\r\n              required\r\n              autoFocus\r\n              onChange={onChange}\r\n              className=\"formInput\"\r\n            />\r\n            <input type=\"submit\" value=\"Update Sweet\" />\r\n          </form>\r\n          <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n            Cancel\r\n          </span>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h4>{sweetObj.text}</h4>\r\n          {sweetObj.attachmentUrl && <img src={sweetObj.attachmentUrl} />}\r\n          {isOwner && (\r\n            <div class=\"nweet__actions\">\r\n            <span onClick={onDeleteClick}>\r\n              <FontAwesomeIcon icon={faTrash} />\r\n            </span>\r\n            <span onClick={toggleEditing}>\r\n              <FontAwesomeIcon icon={faPencilAlt} />\r\n            </span>\r\n          </div>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sweet;","import React, { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { storageService, dbService } from \"fbase\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst SweetFactory = ({userObj}) => {\r\n    const [sweet, setSweet] = useState(\"\");\r\n    const [attachment, setAttachment] = useState(\"\");\r\n    const onSubmit = async (event) => {\r\n        if (sweet === \"\") {\r\n            return;\r\n        }\r\n        event.preventDefault();\r\n        let attachmentUrl = \"\";\r\n        if(attachment !==\"\") {\r\n            const attachmentRef = storageService\r\n        .ref()\r\n        .child(`${userObj.uid}/${uuidv4()}`);\r\n        const response = await attachmentRef.putString(attachment,\"data_url\");\r\n        attachmentUrl = await response.ref.getDownloadURL();\r\n        }\r\n        const sweetObj = {\r\n            text: sweet,\r\n            createdAt: Date.now(),\r\n            creatorId: userObj.uid,\r\n            attachmentUrl\r\n        };\r\n        await dbService.collection(\"sweets\").add(sweetObj);\r\n        setSweet(\"\");\r\n        setAttachment(\"\");\r\n    };\r\n    const onChange = (event) => {\r\n        const { target:{value}\r\n        } = event;\r\n        setSweet(value);\r\n    }\r\n    const onFileChange = (event) => {\r\n        const {target: {files },\r\n        } = event;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            const {\r\n                currentTarget: { result },\r\n            } = finishedEvent;\r\n            setAttachment(result);\r\n        };\r\n        reader.readAsDataURL(theFile);\r\n    }\r\n    const onClearAttachment = () => setAttachment(\"\")\r\n    return (\r\n        <form onSubmit={onSubmit} className=\"factoryForm\">\r\n            <div className=\"factoryInput__container\">\r\n            <input className=\"factoryInput__input\" value={sweet} onChange={onChange} type=\"text\" placeholder=\"What's on your mind?\" maxLength={120} />\r\n            <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n            </div>\r\n            <label for=\"attach-file\" className=\"factoryInput__label\">\r\n            <span>Add photos</span>\r\n            <FontAwesomeIcon icon={faPlus} />\r\n            </label>\r\n            <input\r\n                id=\"attach-file\"\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                onChange={onFileChange}\r\n                style={{\r\n                opacity: 0,\r\n                }}\r\n                />\r\n            {attachment && (\r\n                <div className=\"factoryForm__attachment\">\r\n                    <img\r\n                        src={attachment}\r\n                        style={{\r\n                        backgroundImage: attachment,\r\n                        }}\r\n                    />\r\n                    <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n                        <span>Remove</span>\r\n                        <FontAwesomeIcon icon={faTimes} />\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </form>\r\n    )\r\n};\r\n\r\nexport default SweetFactory;","import React, { useEffect, useState } from \"react\";\r\nimport { dbService, storageService } from \"fbase\";\r\nimport Sweet from \"components/Sweet\";\r\nimport SweetFactory from \"components/SweetFactory\";\r\n\r\nconst Home = ({userObj}) => {\r\n    const [sweets, setSweets] = useState([]);\r\n    useEffect(() => {  \r\n        dbService.collection(\"sweets\").onSnapshot(snapshot => {\r\n            const sweetArray = snapshot.docs.map(doc => ({id:doc.id, ...doc.data()\r\n            }));\r\n            setSweets(sweetArray);\r\n        });\r\n    }, []);\r\n    \r\n    return ( \r\n    <div className=\"container\">\r\n        <SweetFactory userObj={userObj}/>\r\n        <div style={{ marginTop: 30 }}>\r\n            {sweets.map((sweet) => (\r\n            <Sweet \r\n                key={sweet.id} \r\n                sweetObj={sweet} \r\n                isOwner={sweet.creatorId === userObj.uid}\r\n                />\r\n            ))}\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\nexport default Home;","import { authService, dbService } from \"fbase\";\r\nimport React,{useEffect, useState} from \"react\";\r\nimport {useHistory } from \"react-router-dom\";\r\n\r\nexport default ({refreshUser, userObj}) => {\r\n    const history = useHistory();\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n    const onLogOutClick =() => {\r\n        authService.signOut();\r\n        history.push(\"/\");\r\n        \r\n    };\r\n    const onChange = (event) => {\r\n        const {\r\n          target: { value },\r\n        } = event;\r\n        setNewDisplayName(value);\r\n      };\r\n      const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if (userObj.displayName !== newDisplayName) {\r\n          await userObj.updateProfile({\r\n            displayName: newDisplayName,\r\n          });\r\n          refreshUser();\r\n        }\r\n    };\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={onSubmit} className=\"profileForm\">\r\n        <input\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          autoFocus\r\n          placeholder=\"Display name\"\r\n          value={newDisplayName}\r\n          className=\"formInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value=\"Update Profile\"\r\n          className=\"formBtn\"\r\n          style={{\r\n            marginTop: 10,\r\n          }}\r\n        />\r\n      </form>\r\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n        Log Out\r\n      </span>\r\n    </div>\r\n    );\r\n};","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({userObj}) => (\r\n<nav>\r\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n        <li>\r\n            <Link to=\"/\" style={{ marginRight: 10 }}>\r\n            <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n            </Link>\r\n        </li>\r\n        <li>\r\n        <Link\r\n          to=\"/profile\"\r\n          style={{\r\n            marginLeft: 10,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            fontSize: 12,\r\n          }}\r\n        >\r\n          <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n          <span style={{ marginTop: 10 }}>\r\n            {userObj.displayName\r\n              ? `${userObj.displayName}의 Profile`\r\n              : \"Profile\"}\r\n          </span>\r\n        </Link>\r\n        </li>\r\n    </ul>\r\n</nav>\r\n);\r\nexport default Navigation;","import React from \"react\";\r\nimport {HashRouter as Router, Route, Switch} from \"react-router-dom\"\r\nimport Auth from \"../routes/Auth\";\r\nimport Home from \"../routes/Home\";\r\nimport Profile from \"routes/Profile\";\r\nimport Navigation from \"components/Navigation\";\r\n\r\n\r\nconst AppRouter = ({ refreshUser,isLoggedIn, userObj}) => {\r\n    return (\r\n      <Router>\r\n        {isLoggedIn && <Navigation userObj={userObj} />}\r\n        <Switch>\r\n          {isLoggedIn ? (\r\n              <div\r\n              style={{\r\n                maxWidth: 890,\r\n                width: \"100%\",\r\n                margin: \"0 auto\",\r\n                marginTop: 80,\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              <Route exact path=\"/\">\r\n                <Home userObj={userObj} />\r\n              </Route>\r\n              <Route exact path=\"/profile\">\r\n                <Profile userObj={userObj} refreshUser={refreshUser}/>\r\n              </Route>\r\n            </div>\r\n          ) : (\r\n            <>\r\n              <Route exact path=\"/\">\r\n                <Auth />\r\n              </Route>\r\n            </>\r\n          )}\r\n        </Switch>\r\n      </Router>\r\n    );\r\n          };\r\nexport default AppRouter;","import React, {useEffect, useState} from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if(user){\n        setUserObj({\n          displayName:user.displayName,\n          uid:user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        }); \n      }  else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, [])\n  const refreshUser = () => {\n    const user = authService.currentUser\n    setUserObj({\n      displayName:user.displayName,\n      uid:user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    })\n  }\n  return (\n    <>\n      {init ? <AppRouter \n        refreshUser={refreshUser}\n        isLoggedIn={Boolean(userObj)} \n        userObj={userObj} /> : \"Initializing...\"}\n      \n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}